{"version":3,"sources":["Guest.js","GuestList.js","Counter.js","App.js","index.js"],"names":["Guest","guestName","handleRemoveGuest","id","isConfirmed","toggleConfirmation","editGuestName","hideGuest","className","type","checked","onChange","onClick","GuestList","guests","map","guest","Counter","reduce","total","length","App","useState","addName","setAddName","setGuests","isEditing","setIsEditing","editGuestId","setEditGuestId","setHideGuest","onSubmit","event","preventDefault","editedGuestList","newGuest","Date","getTime","toString","alert","placeholder","e","target","value","removeGuest","filter","toggleGuest","getGuestToEdit","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.189cc5fc.chunk.js","sourcesContent":["import React from 'react'; \n\nconst Guest = ({guestName, handleRemoveGuest, id, isConfirmed, toggleConfirmation, editGuestName, hideGuest}) => {\n return(\n  <li className={`pending ${hideGuest && !isConfirmed ? 'hide-guest' : null }`}>\n  <span>{guestName}</span>\n   <label><input type=\"checkbox\" checked={isConfirmed} onChange={() => toggleConfirmation(id)}/>Confirmed</label>\n   <button onClick={() => editGuestName(id)}>Edit</button>\n   <button onClick={() => handleRemoveGuest(id)}>Remove</button>\n  </li>\n ); \n}\n\nexport default Guest; ","import React from 'react'\r\nimport Guest from './Guest'\r\n\r\nconst GuestList = ({ guests, handleRemoveGuest, toggleConfirmation, editGuestName, hideGuest }) => {\r\n  return (\r\n    <ul>\r\n      {guests.map((guest) => {\r\n        const { guestName, id, isConfirmed } = guest; \r\n        return (\r\n          <Guest \r\n            key={id} id={id} \r\n            guestName={guestName} \r\n            handleRemoveGuest={handleRemoveGuest} \r\n            isConfirmed={isConfirmed} \r\n            toggleConfirmation={toggleConfirmation} \r\n            editGuestName={editGuestName} \r\n            hideGuest={hideGuest} />      \r\n        )\r\n      })}\r\n    </ul>\r\n  ); \r\n}\r\n\r\nexport default GuestList; ","import React from 'react'; \r\n\r\nconst Counter = ({guests}) => {\r\n  return (\r\n    <table className=\"counter\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Attending: {guests.reduce((total, guest) => {\r\n              if(guest.isConfirmed){\r\n                total++\r\n              }\r\n              return total\r\n            }, 0)}</td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Unconfirmed: {guests.reduce((total, guest) => {\r\n              if(!guest.isConfirmed){\r\n                total++\r\n              }\r\n              return total\r\n            }, 0)}</td>\r\n          <td></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total: {guests.length}</td>\r\n          <td></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  ); \r\n}\r\n\r\nexport default Counter; ","import React, { useState } from 'react';\nimport GuestList from './GuestList'\nimport Counter from './Counter'\n\nfunction App() {\n  const [addName, setAddName] = useState('');\n  const [guests, setGuests] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editGuestId, setEditGuestId] = useState('');\n  const [hideGuest, setHideGuest] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    //If the input field is blank\n    if(!addName && !isEditing){\n      alert(\"You can't submit a blank name\"); \n      return; \n    }\n    //Edit guest name\n    if(addName && isEditing){\n      const editedGuestList = guests.map((guest) => {\n        if(guest.id === editGuestId){\n          return {\n            ...guest,\n            guestName: addName\n          };\n        }else{\n          return guest; \n        }\n      })\n      setGuests(editedGuestList);\n      setIsEditing(!isEditing);\n      setEditGuestId('');\n    }\n\n    //Submits a guest name\n    if(addName && !isEditing){\n      const newGuest = {guestName: addName, id: new Date().getTime().toString(), isConfirmed: false};\n      setGuests([...guests, newGuest]);\n    }\n    setAddName(''); \n  }\n\n  //Checkbox for guests for unconfirmed or confirmed\n  const toggleConfirmation = (id) => {\n    const toggleGuest = guests.map((guest) => {\n      if(guest.id === id){\n        return {\n          ...guest,\n          isConfirmed: !guest.isConfirmed\n        };\n      }else{\n        return guest;\n      }\n    })\n    setGuests(toggleGuest)\n  }\n\n  //Removes the guest when the remove button is clicked\n  const handleRemoveGuest = (id) => {\n    if(isEditing){\n      alert('Please edit the guest name');\n      return;\n    }\n    const removeGuest = guests.filter((guest) => guest.id !== id);\n    setGuests(removeGuest);\n  }\n\n  //Edit the guest name when the edit button is clicked\n  const editGuestName = (id) => {\n    if(isEditing) return;\n    const getGuestToEdit = guests.find((guest) => guest.id === id);\n    setAddName(getGuestToEdit.guestName);\n    setEditGuestId(getGuestToEdit.id);\n    setIsEditing(!isEditing);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className=\"topDivFont\">RSVP</h1>\n        <p className=\"topDivFont\">Come join us!</p>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" \n            placeholder=\"Type your name\"\n            onChange={(e) => setAddName(e.target.value)}\n            value={addName} />\n          <button type=\"submit\">{isEditing ? 'Save' : 'Submit'}</button>\n        </form>\n      </header>\n      <div className=\"main\">\n        <div>\n          <h2>Guest List</h2>\n          <label>\n            <input \n              type=\"checkbox\" \n              checked={hideGuest} \n              onChange={() => setHideGuest(!hideGuest)} /> \n              Hide unconfirmed guests\n          </label>\n        </div>\n          <Counter guests={guests} />\n          <GuestList \n            guests={guests} \n            handleRemoveGuest={handleRemoveGuest} \n            toggleConfirmation={toggleConfirmation} \n            editGuestName={editGuestName} \n            hideGuest={hideGuest} />\n      </div>  \n    </div>\n  );  \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}